/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Article } from "./Article";
import {
  ArticleFromJSON,
  ArticleFromJSONTyped,
  ArticleToJSON,
  ArticleToJSONTyped,
} from "./Article";

/**
 *
 * @export
 * @interface QuerySearchResult
 */
export interface QuerySearchResult {
  /**
   *
   * @type {number}
   * @memberof QuerySearchResult
   */
  status: number;
  /**
   *
   * @type {number}
   * @memberof QuerySearchResult
   */
  numResults: number;
  /**
   *
   * @type {Array<Article>}
   * @memberof QuerySearchResult
   */
  articles: Array<Article>;
}

/**
 * Check if a given object implements the QuerySearchResult interface.
 */
export function instanceOfQuerySearchResult(
  value: object,
): value is QuerySearchResult {
  if (!("status" in value) || value["status"] === undefined) return false;
  if (!("numResults" in value) || value["numResults"] === undefined)
    return false;
  if (!("articles" in value) || value["articles"] === undefined) return false;
  return true;
}

export function QuerySearchResultFromJSON(json: any): QuerySearchResult {
  return QuerySearchResultFromJSONTyped(json, false);
}

export function QuerySearchResultFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): QuerySearchResult {
  if (json == null) {
    return json;
  }
  return {
    status: json["status"],
    numResults: json["numResults"],
    articles: (json["articles"] as Array<any>).map(ArticleFromJSON),
  };
}

export function QuerySearchResultToJSON(json: any): QuerySearchResult {
  return QuerySearchResultToJSONTyped(json, false);
}

export function QuerySearchResultToJSONTyped(
  value?: QuerySearchResult | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    status: value["status"],
    numResults: value["numResults"],
    articles: (value["articles"] as Array<any>).map(ArticleToJSON),
  };
}
