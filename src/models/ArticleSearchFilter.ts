/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { CoordinateFilter } from "./CoordinateFilter";
import {
  CoordinateFilterFromJSON,
  CoordinateFilterFromJSONTyped,
  CoordinateFilterToJSON,
  CoordinateFilterToJSONTyped,
} from "./CoordinateFilter";

/**
 * Complex filter structure for article searches that supports nested logical operations (AND, OR, NOT) and multiple filtering criteria.
 * @export
 * @interface ArticleSearchFilter
 */
export interface ArticleSearchFilter {
  /**
   * Filter by specific article identifiers. Accepts either a single ID or an array of IDs. Returns only articles matching these IDs.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  articleId?: Array<string> | null;
  /**
   * Filter by specific story identifiers. Accepts either a single ID or an array of IDs. Returns only articles belonging to these stories.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  clusterId?: Array<string> | null;
  /**
   * Filter articles by specific publisher domains or subdomains. Accepts either a single domain or an array of domains. Multiple values create an OR filter.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  source?: Array<string> | null;
  /**
   * Exclude articles from specific publisher domains or subdomains. Accepts either a single domain or an array of domains. Multiple values create an AND-exclude filter.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludeSource?: Array<string> | null;
  /**
   * Filter articles using Perigon's curated publisher bundles (e.g., top100, top25tech). Accepts either a single source group or an array. Multiple values create an OR filter to include articles from any of the specified bundles.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  sourceGroup?: Array<string> | null;
  /**
   * Filter articles by their language using ISO-639 two-letter codes in lowercase (e.g., en, es, fr). Accepts either a single language code or an array. Multiple values create an OR filter.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  language?: Array<string> | null;
  /**
   * Exclude articles in specific languages using ISO-639 two-letter codes in lowercase. Accepts either a single language code or an array. Multiple values create an AND-exclude filter.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludeLanguage?: Array<string> | null;
  /**
   * Filter articles by editorial labels such as Opinion, Paid-news, Non-news, Fact Check, or Press Release. View our docs for an exhaustive list of labels. Accepts either a single label or an array. Multiple values create an OR filter.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  label?: Array<string> | null;
  /**
   * Exclude articles with specific editorial labels. Accepts either a single label or an array. Multiple values create an AND-exclude filter, removing all content with any of these labels.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludeLabel?: Array<string> | null;
  /**
   * Filter by Google Content Categories. Must pass the full hierarchical path of the category. Accepts either a single path or an array. Example: taxonomy=/Finance/Banking/Other,/Finance/Investing/Funds. Multiple values create an OR filter.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  taxonomy?: Array<string> | null;
  /**
   * Filter by broad content categories such as Politics, Tech, Sports, Business, or Finance. Accepts either a single category or an array. Use none to find uncategorized articles. Multiple values create an OR filter.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  category?: Array<string> | null;
  /**
   * Filter by specific topics such as Markets, Crime, Cryptocurrency, or College Sports. Accepts either a single topic or an array. Topics are more granular than categories, and articles can have multiple topics. Multiple values create an OR filter.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  topic?: Array<string> | null;
  /**
   * Exclude articles with specific topics. Accepts either a single topic or an array. Multiple values create an AND-exclude filter, removing all content with any of these topics.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludeTopic?: Array<string> | null;
  /**
   * Filter articles by countries they mention using two-letter country codes in lowercase (e.g., us, gb, jp). Accepts either a single country code or an array. Multiple values create an OR filter. See documentation for supported country codes.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  country?: Array<string> | null;
  /**
   * Exclude articles from specific countries using two-letter country codes in lowercase. Accepts either a single country code or an array. Multiple values create an AND-exclude filter. See documentation for supported country codes.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludeCountry?: Array<string> | null;
  /**
   * Filter articles where specified countries play a central role in the content, not just mentioned. Uses two-letter country codes in lowercase. Accepts either a single country code or an array. Multiple values create an OR filter. See documentation for supported country codes.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  locationsCountry?: Array<string> | null;
  /**
   * Exclude articles where specified countries play a central role in the content. Accepts either a single country code or an array. Multiple values create an AND-exclude filter, removing articles focused on any of these countries. See documentation for supported country codes.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludeLocationsCountry?: Array<string> | null;
  /**
   * Filter articles where specified states play a central role in the content. Accepts either a single state code or an array. Multiple values create an OR filter. Uses two-letter state codes in lowercase. See documentation for supported state codes.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  state?: Array<string> | null;
  /**
   * Exclude articles where specified states play a central role. Accepts either a single state code or an array. Multiple values create an AND-exclude filter, removing articles focused on any of these states. See documentation for supported state codes.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludeState?: Array<string> | null;
  /**
   * Filter articles that mention or are related to specific counties. Accepts either a single county name or an array. Multiple values create an OR filter. County names typically include the word 'County' (e.g., Los Angeles County).
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  county?: Array<string> | null;
  /**
   * Exclude articles that mention or are related to specific counties. Accepts either a single county name or an array. Multiple values create an AND-exclude filter. County names should match the format in article metadata (e.g., Los Angeles County, Cook County).
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludeCounty?: Array<string> | null;
  /**
   * Filter articles that mention or are related to specific cities. Accepts either a single city name or an array. Multiple values create an OR filter.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  city?: Array<string> | null;
  /**
   * Exclude articles that mention or are related to specific cities. Accepts either a single city name or an array. Multiple values create an AND-exclude filter.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludeCity?: Array<string> | null;
  /**
   * Filter for articles from publishers based in specific countries. Accepts either a single country code or an array. Uses two-letter country codes in lowercase (e.g., us, gb). See documentation for supported country codes.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  sourceCountry?: Array<string> | null;
  /**
   * Filter for articles from publishers based in specific states or regions. Accepts either a single state code or an array. Uses two-letter state codes in lowercase. See documentation for supported state codes.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  sourceState?: Array<string> | null;
  /**
   * Filter for articles from publishers based in specific counties. Accepts either a single county name or an array. Multiple values create an OR filter.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  sourceCounty?: Array<string> | null;
  /**
   * Filter for articles from publishers based in specific cities. Accepts either a single city name or an array. Multiple values create an OR filter.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  sourceCity?: Array<string> | null;
  /**
   *
   * @type {CoordinateFilter}
   * @memberof ArticleSearchFilter
   */
  coordinates?: CoordinateFilter;
  /**
   *
   * @type {CoordinateFilter}
   * @memberof ArticleSearchFilter
   */
  sourceCoordinates?: CoordinateFilter;
  /**
   * Filter articles by company identifiers. Accepts either a single ID or an array. Multiple values create an OR filter. For a complete list of tracked companies and their IDs, refer to the /companies endpoint.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  companyId?: Array<string> | null;
  /**
   * Exclude articles mentioning companies with specific identifiers. Accepts either a single ID or an array. Multiple values create an AND-exclude filter. For a complete list of tracked companies and their IDs, refer to the /companies endpoint.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludeCompanyId?: Array<string> | null;
  /**
   * Filter articles by company domains (e.g., apple.com). Accepts either a single domain or an array. Multiple values create an OR filter. For a complete list of tracked companies and their domains, refer to the /companies endpoint.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  companyDomain?: Array<string> | null;
  /**
   * Exclude articles related to companies with specific domains. Accepts either a single domain or an array. Multiple values create an AND-exclude filter. For a complete list of tracked companies and their domains, refer to the /companies endpoint.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludeCompanyDomain?: Array<string> | null;
  /**
   * Filter articles by company stock symbols (e.g., AAPL, MSFT). Accepts either a single symbol or an array. Multiple values create an OR filter. For a complete list of tracked companies and their symbols, refer to the /companies endpoint.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  companySymbol?: Array<string> | null;
  /**
   * Exclude articles related to companies with specific stock symbols. Accepts either a single symbol or an array. Multiple values create an AND-exclude filter. For a complete list of tracked companies and their symbols, refer to the /companies endpoint.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludeCompanySymbol?: Array<string> | null;
  /**
   * Filter articles by company name mentions. Accepts either a single name or an array. Performs exact matching on company names. Multiple values create an OR filter. For a complete list of tracked companies and their names, refer to the /companies endpoint.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  companyName?: Array<string> | null;
  /**
   * Filter articles by Wikidata IDs of mentioned people. Accepts either a single ID or an array. Multiple values create an OR filter. For a complete list of tracked individuals and their Wikidata IDs, refer to the /people endpoint.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  personWikidataId?: Array<string> | null;
  /**
   * Exclude articles mentioning people with specific Wikidata IDs. Accepts either a single ID or an array. Multiple values create an AND-exclude filter. For a complete list of tracked individuals and their Wikidata IDs, refer to the /people endpoint.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludePersonWikidataId?: Array<string> | null;
  /**
   * Filter articles by exact person name matches. Accepts either a single name or an array. Does not support Boolean operators or wildcards. Multiple values create an OR filter. For a complete list of tracked individuals and their names, refer to the /people endpoint.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  personName?: Array<string> | null;
  /**
   * Exclude articles mentioning specific people by name. Accepts either a single name or an array. Multiple values create an AND-exclude filter. For a complete list of tracked individuals and their names, refer to the /people endpoint.
   * @type {Array<string>}
   * @memberof ArticleSearchFilter
   */
  excludePersonName?: Array<string> | null;
  /**
   * Adds additional AND filter objects. These objects must be of the same type as the original filter object and will be combined with the existing filter using the AND logical operator.
   * @type {Array<ArticleSearchFilter>}
   * @memberof ArticleSearchFilter
   */
  aND?: Array<ArticleSearchFilter> | null;
  /**
   * Adds additional OR filter objects. These objects must be of the same type as the original filter object and will be combined with the existing filter using the OR logical operator.
   * @type {Array<ArticleSearchFilter>}
   * @memberof ArticleSearchFilter
   */
  oR?: Array<ArticleSearchFilter> | null;
  /**
   * A filter object for logical NOT operations
   * @type {Array<ArticleSearchFilter>}
   * @memberof ArticleSearchFilter
   */
  nOT?: Array<ArticleSearchFilter> | null;
}

/**
 * Check if a given object implements the ArticleSearchFilter interface.
 */
export function instanceOfArticleSearchFilter(
  value: object,
): value is ArticleSearchFilter {
  return true;
}

export function ArticleSearchFilterFromJSON(json: any): ArticleSearchFilter {
  return ArticleSearchFilterFromJSONTyped(json, false);
}

export function ArticleSearchFilterFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ArticleSearchFilter {
  if (json == null) {
    return json;
  }
  return {
    articleId: json["articleId"] == null ? undefined : json["articleId"],
    clusterId: json["clusterId"] == null ? undefined : json["clusterId"],
    source: json["source"] == null ? undefined : json["source"],
    excludeSource:
      json["excludeSource"] == null ? undefined : json["excludeSource"],
    sourceGroup: json["sourceGroup"] == null ? undefined : json["sourceGroup"],
    language: json["language"] == null ? undefined : json["language"],
    excludeLanguage:
      json["excludeLanguage"] == null ? undefined : json["excludeLanguage"],
    label: json["label"] == null ? undefined : json["label"],
    excludeLabel:
      json["excludeLabel"] == null ? undefined : json["excludeLabel"],
    taxonomy: json["taxonomy"] == null ? undefined : json["taxonomy"],
    category: json["category"] == null ? undefined : json["category"],
    topic: json["topic"] == null ? undefined : json["topic"],
    excludeTopic:
      json["excludeTopic"] == null ? undefined : json["excludeTopic"],
    country: json["country"] == null ? undefined : json["country"],
    excludeCountry:
      json["excludeCountry"] == null ? undefined : json["excludeCountry"],
    locationsCountry:
      json["locationsCountry"] == null ? undefined : json["locationsCountry"],
    excludeLocationsCountry:
      json["excludeLocationsCountry"] == null
        ? undefined
        : json["excludeLocationsCountry"],
    state: json["state"] == null ? undefined : json["state"],
    excludeState:
      json["excludeState"] == null ? undefined : json["excludeState"],
    county: json["county"] == null ? undefined : json["county"],
    excludeCounty:
      json["excludeCounty"] == null ? undefined : json["excludeCounty"],
    city: json["city"] == null ? undefined : json["city"],
    excludeCity: json["excludeCity"] == null ? undefined : json["excludeCity"],
    sourceCountry:
      json["sourceCountry"] == null ? undefined : json["sourceCountry"],
    sourceState: json["sourceState"] == null ? undefined : json["sourceState"],
    sourceCounty:
      json["sourceCounty"] == null ? undefined : json["sourceCounty"],
    sourceCity: json["sourceCity"] == null ? undefined : json["sourceCity"],
    coordinates:
      json["coordinates"] == null
        ? undefined
        : CoordinateFilterFromJSON(json["coordinates"]),
    sourceCoordinates:
      json["sourceCoordinates"] == null
        ? undefined
        : CoordinateFilterFromJSON(json["sourceCoordinates"]),
    companyId: json["companyId"] == null ? undefined : json["companyId"],
    excludeCompanyId:
      json["excludeCompanyId"] == null ? undefined : json["excludeCompanyId"],
    companyDomain:
      json["companyDomain"] == null ? undefined : json["companyDomain"],
    excludeCompanyDomain:
      json["excludeCompanyDomain"] == null
        ? undefined
        : json["excludeCompanyDomain"],
    companySymbol:
      json["companySymbol"] == null ? undefined : json["companySymbol"],
    excludeCompanySymbol:
      json["excludeCompanySymbol"] == null
        ? undefined
        : json["excludeCompanySymbol"],
    companyName: json["companyName"] == null ? undefined : json["companyName"],
    personWikidataId:
      json["personWikidataId"] == null ? undefined : json["personWikidataId"],
    excludePersonWikidataId:
      json["excludePersonWikidataId"] == null
        ? undefined
        : json["excludePersonWikidataId"],
    personName: json["personName"] == null ? undefined : json["personName"],
    excludePersonName:
      json["excludePersonName"] == null ? undefined : json["excludePersonName"],
    aND:
      json["AND"] == null
        ? undefined
        : (json["AND"] as Array<any>).map(ArticleSearchFilterFromJSON),
    oR:
      json["OR"] == null
        ? undefined
        : (json["OR"] as Array<any>).map(ArticleSearchFilterFromJSON),
    nOT:
      json["NOT"] == null
        ? undefined
        : (json["NOT"] as Array<any>).map(ArticleSearchFilterFromJSON),
  };
}

export function ArticleSearchFilterToJSON(json: any): ArticleSearchFilter {
  return ArticleSearchFilterToJSONTyped(json, false);
}

export function ArticleSearchFilterToJSONTyped(
  value?: ArticleSearchFilter | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    articleId: value["articleId"],
    clusterId: value["clusterId"],
    source: value["source"],
    excludeSource: value["excludeSource"],
    sourceGroup: value["sourceGroup"],
    language: value["language"],
    excludeLanguage: value["excludeLanguage"],
    label: value["label"],
    excludeLabel: value["excludeLabel"],
    taxonomy: value["taxonomy"],
    category: value["category"],
    topic: value["topic"],
    excludeTopic: value["excludeTopic"],
    country: value["country"],
    excludeCountry: value["excludeCountry"],
    locationsCountry: value["locationsCountry"],
    excludeLocationsCountry: value["excludeLocationsCountry"],
    state: value["state"],
    excludeState: value["excludeState"],
    county: value["county"],
    excludeCounty: value["excludeCounty"],
    city: value["city"],
    excludeCity: value["excludeCity"],
    sourceCountry: value["sourceCountry"],
    sourceState: value["sourceState"],
    sourceCounty: value["sourceCounty"],
    sourceCity: value["sourceCity"],
    coordinates: CoordinateFilterToJSON(value["coordinates"]),
    sourceCoordinates: CoordinateFilterToJSON(value["sourceCoordinates"]),
    companyId: value["companyId"],
    excludeCompanyId: value["excludeCompanyId"],
    companyDomain: value["companyDomain"],
    excludeCompanyDomain: value["excludeCompanyDomain"],
    companySymbol: value["companySymbol"],
    excludeCompanySymbol: value["excludeCompanySymbol"],
    companyName: value["companyName"],
    personWikidataId: value["personWikidataId"],
    excludePersonWikidataId: value["excludePersonWikidataId"],
    personName: value["personName"],
    excludePersonName: value["excludePersonName"],
    AND:
      value["aND"] == null
        ? undefined
        : (value["aND"] as Array<any>).map(ArticleSearchFilterToJSON),
    OR:
      value["oR"] == null
        ? undefined
        : (value["oR"] as Array<any>).map(ArticleSearchFilterToJSON),
    NOT:
      value["nOT"] == null
        ? undefined
        : (value["nOT"] as Array<any>).map(ArticleSearchFilterToJSON),
  };
}
