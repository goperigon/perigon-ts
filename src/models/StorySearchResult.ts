/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { NewsCluster } from "./NewsCluster";
import {
  NewsClusterFromJSON,
  NewsClusterFromJSONTyped,
  NewsClusterToJSON,
  NewsClusterToJSONTyped,
} from "./NewsCluster";

/**
 * Story search result
 * @export
 * @interface StorySearchResult
 */
export interface StorySearchResult {
  /**
   *
   * @type {number}
   * @memberof StorySearchResult
   */
  status: number;
  /**
   *
   * @type {number}
   * @memberof StorySearchResult
   */
  numResults: number;
  /**
   *
   * @type {Array<NewsCluster>}
   * @memberof StorySearchResult
   */
  results: Array<NewsCluster>;
}

/**
 * Check if a given object implements the StorySearchResult interface.
 */
export function instanceOfStorySearchResult(
  value: object,
): value is StorySearchResult {
  if (!("status" in value) || value["status"] === undefined) return false;
  if (!("numResults" in value) || value["numResults"] === undefined)
    return false;
  if (!("results" in value) || value["results"] === undefined) return false;
  return true;
}

export function StorySearchResultFromJSON(json: any): StorySearchResult {
  return StorySearchResultFromJSONTyped(json, false);
}

export function StorySearchResultFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): StorySearchResult {
  if (json == null) {
    return json;
  }
  return {
    status: json["status"],
    numResults: json["numResults"],
    results: (json["results"] as Array<any>).map(NewsClusterFromJSON),
  };
}

export function StorySearchResultToJSON(json: any): StorySearchResult {
  return StorySearchResultToJSONTyped(json, false);
}

export function StorySearchResultToJSONTyped(
  value?: StorySearchResult | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    status: value["status"],
    numResults: value["numResults"],
    results: (value["results"] as Array<any>).map(NewsClusterToJSON),
  };
}
