/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface CompanyHolder
 */
export interface CompanyHolder {
  /**
   *
   * @type {string}
   * @memberof CompanyHolder
   */
  id?: string | null;
  /**
   *
   * @type {string}
   * @memberof CompanyHolder
   */
  name?: string | null;
  /**
   *
   * @type {Array<string>}
   * @memberof CompanyHolder
   */
  domains?: Array<string> | null;
  /**
   *
   * @type {Array<string>}
   * @memberof CompanyHolder
   */
  symbols?: Array<string> | null;
}

/**
 * Check if a given object implements the CompanyHolder interface.
 */
export function instanceOfCompanyHolder(value: object): value is CompanyHolder {
  return true;
}

export function CompanyHolderFromJSON(json: any): CompanyHolder {
  return CompanyHolderFromJSONTyped(json, false);
}

export function CompanyHolderFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CompanyHolder {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    name: json["name"] == null ? undefined : json["name"],
    domains: json["domains"] == null ? undefined : json["domains"],
    symbols: json["symbols"] == null ? undefined : json["symbols"],
  };
}

export function CompanyHolderToJSON(json: any): CompanyHolder {
  return CompanyHolderToJSONTyped(json, false);
}

export function CompanyHolderToJSONTyped(
  value?: CompanyHolder | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    name: value["name"],
    domains: value["domains"],
    symbols: value["symbols"],
  };
}
