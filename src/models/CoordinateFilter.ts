/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Filter articles from publishers based at specific geographic locations. Uses latitude, longitude, and radius parameters to define a circular search area for publisher locations.
 * @export
 * @interface CoordinateFilter
 */
export interface CoordinateFilter {
  /**
   *
   * @type {number}
   * @memberof CoordinateFilter
   */
  lat?: number | null;
  /**
   *
   * @type {number}
   * @memberof CoordinateFilter
   */
  lon?: number | null;
  /**
   *
   * @type {number}
   * @memberof CoordinateFilter
   */
  radius?: number | null;
}

/**
 * Check if a given object implements the CoordinateFilter interface.
 */
export function instanceOfCoordinateFilter(
  value: object,
): value is CoordinateFilter {
  return true;
}

export function CoordinateFilterFromJSON(json: any): CoordinateFilter {
  return CoordinateFilterFromJSONTyped(json, false);
}

export function CoordinateFilterFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CoordinateFilter {
  if (json == null) {
    return json;
  }
  return {
    lat: json["lat"] == null ? undefined : json["lat"],
    lon: json["lon"] == null ? undefined : json["lon"],
    radius: json["radius"] == null ? undefined : json["radius"],
  };
}

export function CoordinateFilterToJSON(json: any): CoordinateFilter {
  return CoordinateFilterToJSONTyped(json, false);
}

export function CoordinateFilterToJSONTyped(
  value?: CoordinateFilter | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    lat: value["lat"],
    lon: value["lon"],
    radius: value["radius"],
  };
}
