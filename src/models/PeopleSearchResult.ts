/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Person } from "./Person";
import {
  PersonFromJSON,
  PersonFromJSONTyped,
  PersonToJSON,
  PersonToJSONTyped,
} from "./Person";

/**
 * Person search result
 * @export
 * @interface PeopleSearchResult
 */
export interface PeopleSearchResult {
  /**
   *
   * @type {number}
   * @memberof PeopleSearchResult
   */
  status: number;
  /**
   *
   * @type {number}
   * @memberof PeopleSearchResult
   */
  numResults: number;
  /**
   *
   * @type {Array<Person>}
   * @memberof PeopleSearchResult
   */
  results: Array<Person>;
}

/**
 * Check if a given object implements the PeopleSearchResult interface.
 */
export function instanceOfPeopleSearchResult(
  value: object,
): value is PeopleSearchResult {
  if (!("status" in value) || value["status"] === undefined) return false;
  if (!("numResults" in value) || value["numResults"] === undefined)
    return false;
  if (!("results" in value) || value["results"] === undefined) return false;
  return true;
}

export function PeopleSearchResultFromJSON(json: any): PeopleSearchResult {
  return PeopleSearchResultFromJSONTyped(json, false);
}

export function PeopleSearchResultFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PeopleSearchResult {
  if (json == null) {
    return json;
  }
  return {
    status: json["status"],
    numResults: json["numResults"],
    results: (json["results"] as Array<any>).map(PersonFromJSON),
  };
}

export function PeopleSearchResultToJSON(json: any): PeopleSearchResult {
  return PeopleSearchResultToJSONTyped(json, false);
}

export function PeopleSearchResultToJSONTyped(
  value?: PeopleSearchResult | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    status: value["status"],
    numResults: value["numResults"],
    results: (value["results"] as Array<any>).map(PersonToJSON),
  };
}
