/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Coordinate } from "./Coordinate";
import {
  CoordinateFromJSON,
  CoordinateFromJSONTyped,
  CoordinateToJSON,
  CoordinateToJSONTyped,
} from "./Coordinate";

/**
 *
 * @export
 * @interface SourceLocation
 */
export interface SourceLocation {
  /**
   *
   * @type {string}
   * @memberof SourceLocation
   */
  country?: string | null;
  /**
   *
   * @type {string}
   * @memberof SourceLocation
   */
  state?: string | null;
  /**
   *
   * @type {string}
   * @memberof SourceLocation
   */
  county?: string | null;
  /**
   *
   * @type {string}
   * @memberof SourceLocation
   */
  city?: string | null;
  /**
   *
   * @type {Coordinate}
   * @memberof SourceLocation
   */
  coordinates?: Coordinate;
}

/**
 * Check if a given object implements the SourceLocation interface.
 */
export function instanceOfSourceLocation(
  value: object,
): value is SourceLocation {
  return true;
}

export function SourceLocationFromJSON(json: any): SourceLocation {
  return SourceLocationFromJSONTyped(json, false);
}

export function SourceLocationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SourceLocation {
  if (json == null) {
    return json;
  }
  return {
    country: json["country"] == null ? undefined : json["country"],
    state: json["state"] == null ? undefined : json["state"],
    county: json["county"] == null ? undefined : json["county"],
    city: json["city"] == null ? undefined : json["city"],
    coordinates:
      json["coordinates"] == null
        ? undefined
        : CoordinateFromJSON(json["coordinates"]),
  };
}

export function SourceLocationToJSON(json: any): SourceLocation {
  return SourceLocationToJSONTyped(json, false);
}

export function SourceLocationToJSONTyped(
  value?: SourceLocation | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    country: value["country"],
    state: value["state"],
    county: value["county"],
    city: value["city"],
    coordinates: CoordinateToJSON(value["coordinates"]),
  };
}
