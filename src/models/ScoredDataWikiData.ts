/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { WikiData } from "./WikiData";
import {
  WikiDataFromJSON,
  WikiDataFromJSONTyped,
  WikiDataToJSON,
  WikiDataToJSONTyped,
} from "./WikiData";

/**
 *
 * @export
 * @interface ScoredDataWikiData
 */
export interface ScoredDataWikiData {
  /**
   *
   * @type {number}
   * @memberof ScoredDataWikiData
   */
  score?: number | null;
  /**
   *
   * @type {WikiData}
   * @memberof ScoredDataWikiData
   */
  data?: WikiData;
}

/**
 * Check if a given object implements the ScoredDataWikiData interface.
 */
export function instanceOfScoredDataWikiData(
  value: object,
): value is ScoredDataWikiData {
  return true;
}

export function ScoredDataWikiDataFromJSON(json: any): ScoredDataWikiData {
  return ScoredDataWikiDataFromJSONTyped(json, false);
}

export function ScoredDataWikiDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ScoredDataWikiData {
  if (json == null) {
    return json;
  }
  return {
    score: json["score"] == null ? undefined : json["score"],
    data: json["data"] == null ? undefined : WikiDataFromJSON(json["data"]),
  };
}

export function ScoredDataWikiDataToJSON(json: any): ScoredDataWikiData {
  return ScoredDataWikiDataToJSONTyped(json, false);
}

export function ScoredDataWikiDataToJSONTyped(
  value?: ScoredDataWikiData | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    score: value["score"],
    data: WikiDataToJSON(value["data"]),
  };
}
