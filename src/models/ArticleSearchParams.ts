/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ArticleSearchFilter } from "./ArticleSearchFilter";
import {
  ArticleSearchFilterFromJSON,
  ArticleSearchFilterFromJSONTyped,
  ArticleSearchFilterToJSON,
  ArticleSearchFilterToJSONTyped,
} from "./ArticleSearchFilter";

/**
 *
 * @export
 * @interface ArticleSearchParams
 */
export interface ArticleSearchParams {
  /**
   * Natural language query to search the news articles database
   * @type {string}
   * @memberof ArticleSearchParams
   */
  prompt: string;
  /**
   *
   * @type {ArticleSearchFilter}
   * @memberof ArticleSearchParams
   */
  filter?: ArticleSearchFilter;
  /**
   * 'pubDateFrom' filter, will search articles published after the specified date, the date could be passed as ISO or 'yyyy-mm-dd'. Date time in ISO format, ie. 2024-01-01T00:00:00 - Default: Only articles with a pubDate within the last 30 days of the request
   * @type {Date}
   * @memberof ArticleSearchParams
   */
  pubDateFrom?: Date | null;
  /**
   * 'pubDateFrom' filter, will search articles published before the specified date, the date could be passed as ISO or 'yyyy-mm-dd'. Date time in ISO format, ie. 2024-01-01T00:00:00
   * @type {Date}
   * @memberof ArticleSearchParams
   */
  pubDateTo?: Date | null;
  /**
   * Whether to return reprints in the response or not. Reprints are usually wired articles from sources like AP or Reuters that are reprinted in multiple sources at the same time. By default, this parameter is 'true'.
   * @type {boolean}
   * @memberof ArticleSearchParams
   */
  showReprints?: boolean | null;
  /**
   * The number of items per page.
   * @type {number}
   * @memberof ArticleSearchParams
   */
  size?: number | null;
  /**
   * The page number to retrieve.
   * @type {number}
   * @memberof ArticleSearchParams
   */
  page?: number | null;
  /**
   *
   * @type {Date}
   * @memberof ArticleSearchParams
   */
  addDateFrom?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof ArticleSearchParams
   */
  addDateTo?: Date | null;
  /**
   *
   * @type {number}
   * @memberof ArticleSearchParams
   */
  scoreThreshold?: number | null;
}

/**
 * Check if a given object implements the ArticleSearchParams interface.
 */
export function instanceOfArticleSearchParams(
  value: object,
): value is ArticleSearchParams {
  if (!("prompt" in value) || value["prompt"] === undefined) return false;
  return true;
}

export function ArticleSearchParamsFromJSON(json: any): ArticleSearchParams {
  return ArticleSearchParamsFromJSONTyped(json, false);
}

export function ArticleSearchParamsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ArticleSearchParams {
  if (json == null) {
    return json;
  }
  return {
    prompt: json["prompt"],
    filter:
      json["filter"] == null
        ? undefined
        : ArticleSearchFilterFromJSON(json["filter"]),
    pubDateFrom:
      json["pubDateFrom"] == null ? undefined : new Date(json["pubDateFrom"]),
    pubDateTo:
      json["pubDateTo"] == null ? undefined : new Date(json["pubDateTo"]),
    showReprints:
      json["showReprints"] == null ? undefined : json["showReprints"],
    size: json["size"] == null ? undefined : json["size"],
    page: json["page"] == null ? undefined : json["page"],
    addDateFrom:
      json["addDateFrom"] == null ? undefined : new Date(json["addDateFrom"]),
    addDateTo:
      json["addDateTo"] == null ? undefined : new Date(json["addDateTo"]),
    scoreThreshold:
      json["scoreThreshold"] == null ? undefined : json["scoreThreshold"],
  };
}

export function ArticleSearchParamsToJSON(json: any): ArticleSearchParams {
  return ArticleSearchParamsToJSONTyped(json, false);
}

export function ArticleSearchParamsToJSONTyped(
  value?: ArticleSearchParams | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    prompt: value["prompt"],
    filter: ArticleSearchFilterToJSON(value["filter"]),
    pubDateFrom:
      value["pubDateFrom"] == null
        ? undefined
        : (value["pubDateFrom"] as any).toISOString(),
    pubDateTo:
      value["pubDateTo"] == null
        ? undefined
        : (value["pubDateTo"] as any).toISOString(),
    showReprints: value["showReprints"],
    size: value["size"],
    page: value["page"],
    addDateFrom:
      value["addDateFrom"] == null
        ? undefined
        : (value["addDateFrom"] as any).toISOString(),
    addDateTo:
      value["addDateTo"] == null
        ? undefined
        : (value["addDateTo"] as any).toISOString(),
    scoreThreshold: value["scoreThreshold"],
  };
}
