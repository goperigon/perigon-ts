/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface WebResources
 */
export interface WebResources {
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  careers?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  about?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  blog?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  events?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  sitemap?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  updates?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  linkedin?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  facebook?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  instagram?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  medium?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  reddit?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  threads?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  tiktok?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  x?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  wellfound?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  youtube?: string | null;
  /**
   *
   * @type {string}
   * @memberof WebResources
   */
  wikipedia?: string | null;
}

/**
 * Check if a given object implements the WebResources interface.
 */
export function instanceOfWebResources(value: object): value is WebResources {
  return true;
}

export function WebResourcesFromJSON(json: any): WebResources {
  return WebResourcesFromJSONTyped(json, false);
}

export function WebResourcesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): WebResources {
  if (json == null) {
    return json;
  }
  return {
    careers: json["careers"] == null ? undefined : json["careers"],
    about: json["about"] == null ? undefined : json["about"],
    blog: json["blog"] == null ? undefined : json["blog"],
    events: json["events"] == null ? undefined : json["events"],
    sitemap: json["sitemap"] == null ? undefined : json["sitemap"],
    updates: json["updates"] == null ? undefined : json["updates"],
    linkedin: json["linkedin"] == null ? undefined : json["linkedin"],
    facebook: json["facebook"] == null ? undefined : json["facebook"],
    instagram: json["instagram"] == null ? undefined : json["instagram"],
    medium: json["medium"] == null ? undefined : json["medium"],
    reddit: json["reddit"] == null ? undefined : json["reddit"],
    threads: json["threads"] == null ? undefined : json["threads"],
    tiktok: json["tiktok"] == null ? undefined : json["tiktok"],
    x: json["x"] == null ? undefined : json["x"],
    wellfound: json["wellfound"] == null ? undefined : json["wellfound"],
    youtube: json["youtube"] == null ? undefined : json["youtube"],
    wikipedia: json["wikipedia"] == null ? undefined : json["wikipedia"],
  };
}

export function WebResourcesToJSON(json: any): WebResources {
  return WebResourcesToJSONTyped(json, false);
}

export function WebResourcesToJSONTyped(
  value?: WebResources | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    careers: value["careers"],
    about: value["about"],
    blog: value["blog"],
    events: value["events"],
    sitemap: value["sitemap"],
    updates: value["updates"],
    linkedin: value["linkedin"],
    facebook: value["facebook"],
    instagram: value["instagram"],
    medium: value["medium"],
    reddit: value["reddit"],
    threads: value["threads"],
    tiktok: value["tiktok"],
    x: value["x"],
    wellfound: value["wellfound"],
    youtube: value["youtube"],
    wikipedia: value["wikipedia"],
  };
}
