/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { WikiPage } from "./WikiPage";
import {
  WikiPageFromJSON,
  WikiPageFromJSONTyped,
  WikiPageToJSON,
  WikiPageToJSONTyped,
} from "./WikiPage";

/**
 * Wikipedia search result
 * @export
 * @interface WikipediaSearchResult
 */
export interface WikipediaSearchResult {
  /**
   *
   * @type {number}
   * @memberof WikipediaSearchResult
   */
  status: number;
  /**
   *
   * @type {number}
   * @memberof WikipediaSearchResult
   */
  numResults: number;
  /**
   *
   * @type {Array<WikiPage>}
   * @memberof WikipediaSearchResult
   */
  results: Array<WikiPage>;
}

/**
 * Check if a given object implements the WikipediaSearchResult interface.
 */
export function instanceOfWikipediaSearchResult(
  value: object,
): value is WikipediaSearchResult {
  if (!("status" in value) || value["status"] === undefined) return false;
  if (!("numResults" in value) || value["numResults"] === undefined)
    return false;
  if (!("results" in value) || value["results"] === undefined) return false;
  return true;
}

export function WikipediaSearchResultFromJSON(
  json: any,
): WikipediaSearchResult {
  return WikipediaSearchResultFromJSONTyped(json, false);
}

export function WikipediaSearchResultFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): WikipediaSearchResult {
  if (json == null) {
    return json;
  }
  return {
    status: json["status"],
    numResults: json["numResults"],
    results: (json["results"] as Array<any>).map(WikiPageFromJSON),
  };
}

export function WikipediaSearchResultToJSON(json: any): WikipediaSearchResult {
  return WikipediaSearchResultToJSONTyped(json, false);
}

export function WikipediaSearchResultToJSONTyped(
  value?: WikipediaSearchResult | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    status: value["status"],
    numResults: value["numResults"],
    results: (value["results"] as Array<any>).map(WikiPageToJSON),
  };
}
