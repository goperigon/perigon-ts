/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ScoredDataWikiData } from "./ScoredDataWikiData";
import {
  ScoredDataWikiDataFromJSON,
  ScoredDataWikiDataFromJSONTyped,
  ScoredDataWikiDataToJSON,
  ScoredDataWikiDataToJSONTyped,
} from "./ScoredDataWikiData";

/**
 * Wikipedia vector search result
 * @export
 * @interface WikipediaVectorSearchResult
 */
export interface WikipediaVectorSearchResult {
  /**
   *
   * @type {number}
   * @memberof WikipediaVectorSearchResult
   */
  status: number;
  /**
   *
   * @type {Array<ScoredDataWikiData>}
   * @memberof WikipediaVectorSearchResult
   */
  results: Array<ScoredDataWikiData>;
}

/**
 * Check if a given object implements the WikipediaVectorSearchResult interface.
 */
export function instanceOfWikipediaVectorSearchResult(
  value: object,
): value is WikipediaVectorSearchResult {
  if (!("status" in value) || value["status"] === undefined) return false;
  if (!("results" in value) || value["results"] === undefined) return false;
  return true;
}

export function WikipediaVectorSearchResultFromJSON(
  json: any,
): WikipediaVectorSearchResult {
  return WikipediaVectorSearchResultFromJSONTyped(json, false);
}

export function WikipediaVectorSearchResultFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): WikipediaVectorSearchResult {
  if (json == null) {
    return json;
  }
  return {
    status: json["status"],
    results: (json["results"] as Array<any>).map(ScoredDataWikiDataFromJSON),
  };
}

export function WikipediaVectorSearchResultToJSON(
  json: any,
): WikipediaVectorSearchResult {
  return WikipediaVectorSearchResultToJSONTyped(json, false);
}

export function WikipediaVectorSearchResultToJSONTyped(
  value?: WikipediaVectorSearchResult | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    status: value["status"],
    results: (value["results"] as Array<any>).map(ScoredDataWikiDataToJSON),
  };
}
