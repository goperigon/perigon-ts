/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { NameCount } from "./NameCount";
import {
  NameCountFromJSON,
  NameCountFromJSONTyped,
  NameCountToJSON,
  NameCountToJSONTyped,
} from "./NameCount";
import type { LocationHolder } from "./LocationHolder";
import {
  LocationHolderFromJSON,
  LocationHolderFromJSONTyped,
  LocationHolderToJSON,
  LocationHolderToJSONTyped,
} from "./LocationHolder";

/**
 *
 * @export
 * @interface Journalist
 */
export interface Journalist {
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  id?: string | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  name?: string | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  fullName?: string | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  headline?: string | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  description?: string | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  title?: string | null;
  /**
   *
   * @type {Array<LocationHolder>}
   * @memberof Journalist
   */
  locations?: Array<LocationHolder> | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  updatedAt?: string | null;
  /**
   *
   * @type {Array<NameCount>}
   * @memberof Journalist
   */
  topTopics?: Array<NameCount> | null;
  /**
   *
   * @type {Array<NameCount>}
   * @memberof Journalist
   */
  topSources?: Array<NameCount> | null;
  /**
   *
   * @type {Array<NameCount>}
   * @memberof Journalist
   */
  topCategories?: Array<NameCount> | null;
  /**
   *
   * @type {Array<NameCount>}
   * @memberof Journalist
   */
  topLabels?: Array<NameCount> | null;
  /**
   *
   * @type {Array<NameCount>}
   * @memberof Journalist
   */
  topCountries?: Array<NameCount> | null;
  /**
   *
   * @type {number}
   * @memberof Journalist
   */
  avgMonthlyPosts?: number | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  twitterHandle?: string | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  twitterBio?: string | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  imageUrl?: string | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  linkedinUrl?: string | null;
  /**
   *
   * @type {number}
   * @memberof Journalist
   */
  linkedinConnections?: number | null;
  /**
   *
   * @type {number}
   * @memberof Journalist
   */
  linkedinFollowers?: number | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  facebookUrl?: string | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  instagramUrl?: string | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  websiteUrl?: string | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  blogUrl?: string | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  tumblrUrl?: string | null;
  /**
   *
   * @type {string}
   * @memberof Journalist
   */
  youtubeUrl?: string | null;
}

/**
 * Check if a given object implements the Journalist interface.
 */
export function instanceOfJournalist(value: object): value is Journalist {
  return true;
}

export function JournalistFromJSON(json: any): Journalist {
  return JournalistFromJSONTyped(json, false);
}

export function JournalistFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Journalist {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    name: json["name"] == null ? undefined : json["name"],
    fullName: json["fullName"] == null ? undefined : json["fullName"],
    headline: json["headline"] == null ? undefined : json["headline"],
    description: json["description"] == null ? undefined : json["description"],
    title: json["title"] == null ? undefined : json["title"],
    locations:
      json["locations"] == null
        ? undefined
        : (json["locations"] as Array<any>).map(LocationHolderFromJSON),
    updatedAt: json["updatedAt"] == null ? undefined : json["updatedAt"],
    topTopics:
      json["topTopics"] == null
        ? undefined
        : (json["topTopics"] as Array<any>).map(NameCountFromJSON),
    topSources:
      json["topSources"] == null
        ? undefined
        : (json["topSources"] as Array<any>).map(NameCountFromJSON),
    topCategories:
      json["topCategories"] == null
        ? undefined
        : (json["topCategories"] as Array<any>).map(NameCountFromJSON),
    topLabels:
      json["topLabels"] == null
        ? undefined
        : (json["topLabels"] as Array<any>).map(NameCountFromJSON),
    topCountries:
      json["topCountries"] == null
        ? undefined
        : (json["topCountries"] as Array<any>).map(NameCountFromJSON),
    avgMonthlyPosts:
      json["avgMonthlyPosts"] == null ? undefined : json["avgMonthlyPosts"],
    twitterHandle:
      json["twitterHandle"] == null ? undefined : json["twitterHandle"],
    twitterBio: json["twitterBio"] == null ? undefined : json["twitterBio"],
    imageUrl: json["imageUrl"] == null ? undefined : json["imageUrl"],
    linkedinUrl: json["linkedinUrl"] == null ? undefined : json["linkedinUrl"],
    linkedinConnections:
      json["linkedinConnections"] == null
        ? undefined
        : json["linkedinConnections"],
    linkedinFollowers:
      json["linkedinFollowers"] == null ? undefined : json["linkedinFollowers"],
    facebookUrl: json["facebookUrl"] == null ? undefined : json["facebookUrl"],
    instagramUrl:
      json["instagramUrl"] == null ? undefined : json["instagramUrl"],
    websiteUrl: json["websiteUrl"] == null ? undefined : json["websiteUrl"],
    blogUrl: json["blogUrl"] == null ? undefined : json["blogUrl"],
    tumblrUrl: json["tumblrUrl"] == null ? undefined : json["tumblrUrl"],
    youtubeUrl: json["youtubeUrl"] == null ? undefined : json["youtubeUrl"],
  };
}

export function JournalistToJSON(json: any): Journalist {
  return JournalistToJSONTyped(json, false);
}

export function JournalistToJSONTyped(
  value?: Journalist | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    name: value["name"],
    fullName: value["fullName"],
    headline: value["headline"],
    description: value["description"],
    title: value["title"],
    locations:
      value["locations"] == null
        ? undefined
        : (value["locations"] as Array<any>).map(LocationHolderToJSON),
    updatedAt: value["updatedAt"],
    topTopics:
      value["topTopics"] == null
        ? undefined
        : (value["topTopics"] as Array<any>).map(NameCountToJSON),
    topSources:
      value["topSources"] == null
        ? undefined
        : (value["topSources"] as Array<any>).map(NameCountToJSON),
    topCategories:
      value["topCategories"] == null
        ? undefined
        : (value["topCategories"] as Array<any>).map(NameCountToJSON),
    topLabels:
      value["topLabels"] == null
        ? undefined
        : (value["topLabels"] as Array<any>).map(NameCountToJSON),
    topCountries:
      value["topCountries"] == null
        ? undefined
        : (value["topCountries"] as Array<any>).map(NameCountToJSON),
    avgMonthlyPosts: value["avgMonthlyPosts"],
    twitterHandle: value["twitterHandle"],
    twitterBio: value["twitterBio"],
    imageUrl: value["imageUrl"],
    linkedinUrl: value["linkedinUrl"],
    linkedinConnections: value["linkedinConnections"],
    linkedinFollowers: value["linkedinFollowers"],
    facebookUrl: value["facebookUrl"],
    instagramUrl: value["instagramUrl"],
    websiteUrl: value["websiteUrl"],
    blogUrl: value["blogUrl"],
    tumblrUrl: value["tumblrUrl"],
    youtubeUrl: value["youtubeUrl"],
  };
}
