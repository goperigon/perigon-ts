/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { AuthExceptionCauseStackTraceInner } from "./AuthExceptionCauseStackTraceInner";
import {
  AuthExceptionCauseStackTraceInnerFromJSON,
  AuthExceptionCauseStackTraceInnerFromJSONTyped,
  AuthExceptionCauseStackTraceInnerToJSON,
  AuthExceptionCauseStackTraceInnerToJSONTyped,
} from "./AuthExceptionCauseStackTraceInner";

/**
 *
 * @export
 * @interface AuthExceptionCause
 */
export interface AuthExceptionCause {
  /**
   *
   * @type {Array<AuthExceptionCauseStackTraceInner>}
   * @memberof AuthExceptionCause
   */
  stackTrace?: Array<AuthExceptionCauseStackTraceInner>;
  /**
   *
   * @type {string}
   * @memberof AuthExceptionCause
   */
  message?: string;
  /**
   *
   * @type {string}
   * @memberof AuthExceptionCause
   */
  localizedMessage?: string;
}

/**
 * Check if a given object implements the AuthExceptionCause interface.
 */
export function instanceOfAuthExceptionCause(
  value: object,
): value is AuthExceptionCause {
  return true;
}

export function AuthExceptionCauseFromJSON(json: any): AuthExceptionCause {
  return AuthExceptionCauseFromJSONTyped(json, false);
}

export function AuthExceptionCauseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): AuthExceptionCause {
  if (json == null) {
    return json;
  }
  return {
    stackTrace:
      json["stackTrace"] == null
        ? undefined
        : (json["stackTrace"] as Array<any>).map(
            AuthExceptionCauseStackTraceInnerFromJSON,
          ),
    message: json["message"] == null ? undefined : json["message"],
    localizedMessage:
      json["localizedMessage"] == null ? undefined : json["localizedMessage"],
  };
}

export function AuthExceptionCauseToJSON(json: any): AuthExceptionCause {
  return AuthExceptionCauseToJSONTyped(json, false);
}

export function AuthExceptionCauseToJSONTyped(
  value?: AuthExceptionCause | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    stackTrace:
      value["stackTrace"] == null
        ? undefined
        : (value["stackTrace"] as Array<any>).map(
            AuthExceptionCauseStackTraceInnerToJSON,
          ),
    message: value["message"],
    localizedMessage: value["localizedMessage"],
  };
}
