/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { TopicLabels } from "./TopicLabels";
import {
  TopicLabelsFromJSON,
  TopicLabelsFromJSONTyped,
  TopicLabelsToJSON,
  TopicLabelsToJSONTyped,
} from "./TopicLabels";

/**
 *
 * @export
 * @interface TopicDto
 */
export interface TopicDto {
  /**
   *
   * @type {number}
   * @memberof TopicDto
   */
  id?: number | null;
  /**
   *
   * @type {Date}
   * @memberof TopicDto
   */
  createdAt?: Date | null;
  /**
   *
   * @type {Date}
   * @memberof TopicDto
   */
  updatedAt?: Date | null;
  /**
   *
   * @type {string}
   * @memberof TopicDto
   */
  name?: string | null;
  /**
   *
   * @type {TopicLabels}
   * @memberof TopicDto
   */
  labels?: TopicLabels;
}

/**
 * Check if a given object implements the TopicDto interface.
 */
export function instanceOfTopicDto(value: object): value is TopicDto {
  return true;
}

export function TopicDtoFromJSON(json: any): TopicDto {
  return TopicDtoFromJSONTyped(json, false);
}

export function TopicDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): TopicDto {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    createdAt:
      json["createdAt"] == null ? undefined : new Date(json["createdAt"]),
    updatedAt:
      json["updatedAt"] == null ? undefined : new Date(json["updatedAt"]),
    name: json["name"] == null ? undefined : json["name"],
    labels:
      json["labels"] == null ? undefined : TopicLabelsFromJSON(json["labels"]),
  };
}

export function TopicDtoToJSON(json: any): TopicDto {
  return TopicDtoToJSONTyped(json, false);
}

export function TopicDtoToJSONTyped(
  value?: TopicDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    createdAt:
      value["createdAt"] == null
        ? undefined
        : (value["createdAt"] as any).toISOString(),
    updatedAt:
      value["updatedAt"] == null
        ? undefined
        : (value["updatedAt"] as any).toISOString(),
    name: value["name"],
    labels: TopicLabelsToJSON(value["labels"]),
  };
}
