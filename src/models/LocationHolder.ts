/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface LocationHolder
 */
export interface LocationHolder {
  /**
   *
   * @type {string}
   * @memberof LocationHolder
   */
  country?: string | null;
  /**
   *
   * @type {string}
   * @memberof LocationHolder
   */
  state?: string | null;
  /**
   *
   * @type {string}
   * @memberof LocationHolder
   */
  county?: string | null;
  /**
   *
   * @type {string}
   * @memberof LocationHolder
   */
  city?: string | null;
  /**
   *
   * @type {string}
   * @memberof LocationHolder
   */
  area?: string | null;
}

/**
 * Check if a given object implements the LocationHolder interface.
 */
export function instanceOfLocationHolder(
  value: object,
): value is LocationHolder {
  return true;
}

export function LocationHolderFromJSON(json: any): LocationHolder {
  return LocationHolderFromJSONTyped(json, false);
}

export function LocationHolderFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): LocationHolder {
  if (json == null) {
    return json;
  }
  return {
    country: json["country"] == null ? undefined : json["country"],
    state: json["state"] == null ? undefined : json["state"],
    county: json["county"] == null ? undefined : json["county"],
    city: json["city"] == null ? undefined : json["city"],
    area: json["area"] == null ? undefined : json["area"],
  };
}

export function LocationHolderToJSON(json: any): LocationHolder {
  return LocationHolderToJSONTyped(json, false);
}

export function LocationHolderToJSONTyped(
  value?: LocationHolder | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    country: value["country"],
    state: value["state"],
    county: value["county"],
    city: value["city"],
    area: value["area"],
  };
}
