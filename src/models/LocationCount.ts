/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface LocationCount
 */
export interface LocationCount {
  /**
   *
   * @type {string}
   * @memberof LocationCount
   */
  state?: string | null;
  /**
   *
   * @type {string}
   * @memberof LocationCount
   */
  county?: string | null;
  /**
   *
   * @type {string}
   * @memberof LocationCount
   */
  city?: string | null;
  /**
   *
   * @type {string}
   * @memberof LocationCount
   */
  area?: string | null;
  /**
   *
   * @type {number}
   * @memberof LocationCount
   */
  count?: number | null;
}

/**
 * Check if a given object implements the LocationCount interface.
 */
export function instanceOfLocationCount(value: object): value is LocationCount {
  return true;
}

export function LocationCountFromJSON(json: any): LocationCount {
  return LocationCountFromJSONTyped(json, false);
}

export function LocationCountFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): LocationCount {
  if (json == null) {
    return json;
  }
  return {
    state: json["state"] == null ? undefined : json["state"],
    county: json["county"] == null ? undefined : json["county"],
    city: json["city"] == null ? undefined : json["city"],
    area: json["area"] == null ? undefined : json["area"],
    count: json["count"] == null ? undefined : json["count"],
  };
}

export function LocationCountToJSON(json: any): LocationCount {
  return LocationCountToJSONTyped(json, false);
}

export function LocationCountToJSONTyped(
  value?: LocationCount | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    state: value["state"],
    county: value["county"],
    city: value["city"],
    area: value["area"],
    count: value["count"],
  };
}
