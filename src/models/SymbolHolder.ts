/* tslint:disable */
/* eslint-disable */
/**
 * Perigon API
 * The Perigon API provides access to comprehensive news and web content data. To use the API, simply sign up for a Perigon Business Solutions account to obtain your API key. Your available features may vary based on your plan. See the Authentication section for details on how to use your API key.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: data@perigon.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface SymbolHolder
 */
export interface SymbolHolder {
  /**
   *
   * @type {string}
   * @memberof SymbolHolder
   */
  symbol?: string | null;
  /**
   *
   * @type {string}
   * @memberof SymbolHolder
   */
  exchange?: string | null;
  /**
   *
   * @type {string}
   * @memberof SymbolHolder
   */
  exchangeShortName?: string | null;
  /**
   *
   * @type {string}
   * @memberof SymbolHolder
   */
  ipoDate?: string | null;
}

/**
 * Check if a given object implements the SymbolHolder interface.
 */
export function instanceOfSymbolHolder(value: object): value is SymbolHolder {
  return true;
}

export function SymbolHolderFromJSON(json: any): SymbolHolder {
  return SymbolHolderFromJSONTyped(json, false);
}

export function SymbolHolderFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SymbolHolder {
  if (json == null) {
    return json;
  }
  return {
    symbol: json["symbol"] == null ? undefined : json["symbol"],
    exchange: json["exchange"] == null ? undefined : json["exchange"],
    exchangeShortName:
      json["exchangeShortName"] == null ? undefined : json["exchangeShortName"],
    ipoDate: json["ipoDate"] == null ? undefined : json["ipoDate"],
  };
}

export function SymbolHolderToJSON(json: any): SymbolHolder {
  return SymbolHolderToJSONTyped(json, false);
}

export function SymbolHolderToJSONTyped(
  value?: SymbolHolder | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    symbol: value["symbol"],
    exchange: value["exchange"],
    exchangeShortName: value["exchangeShortName"],
    ipoDate: value["ipoDate"],
  };
}
