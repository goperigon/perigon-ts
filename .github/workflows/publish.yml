name: Tag & Publish Typescript SDK (npm)

on:
  workflow_dispatch:
    inputs:
      version_override:
        description: "Specify version (leave empty for auto-increment)"
        required: false
        default: ""

jobs:
  tag-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write # for npm publishing

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Setup Bun
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          registry-url: "https://registry.npmjs.org"

      - name: Get package name and determine version
        id: package_info
        run: |
          # Extract package name from package.json
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "Package name: $PACKAGE_NAME"

          # Check if manual version override was provided
          if [[ "${{ github.event.inputs.version_override }}" != "" ]]; then
            VERSION="${{ github.event.inputs.version_override }}"
            echo "Using manually specified version: $VERSION"
          else
            # Try to get the current version from npm
            NPM_VERSION=$(npm view $PACKAGE_NAME version 2>/dev/null || echo "0.0.0")
            echo "Current npm version: $NPM_VERSION"
            
            # If npm version is less than 1.0.0, start at 1.0.0
            if [[ $(echo "$NPM_VERSION" | awk -F. '{print $1}') -lt 1 ]]; then
              VERSION="1.0.0"
              echo "Starting at version 1.0.0"
            else
              # Increment the patch version
              IFS='.' read -r major minor patch <<< "$NPM_VERSION"
              VERSION="$major.$minor.$((patch + 1))"
              echo "Incrementing to version $VERSION"
            fi
          fi

          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "tag=v$VERSION" >> "$GITHUB_OUTPUT"

      - name: Create new tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a ${{ steps.package_info.outputs.tag }} -m "Release ${{ steps.package_info.outputs.tag }}"
          git push origin ${{ steps.package_info.outputs.tag }}

      # Update package.json version
      - name: Update package.json version
        run: npm version ${{ steps.package_info.outputs.version }} --no-git-tag-version

      # Install dependencies
      - name: Install dependencies
        run: bun install

      # Build the package
      - name: Build package
        run: bun run build

      # Publish to npm
      - name: Publish to npm
        run: bun publish --access=public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
